/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      T0;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 1 0 0 0];

internalField   uniform 1;

boundaryField
{
    bottom
    {
        type zeroGradient;
    }
    top
    {
        type            codedFixedValue;
        value           uniform 1;
        redirectType    temperature0;   // name of generated BC

        code
        #{
            scalar kn, d1, TB;
            db().lookupObject<IOdictionary>("nondimensionalProperties").lookup("kn") >> kn;
            db().lookupObject<IOdictionary>("nondimensionalProperties").subDict(patch().name()).lookup("temperature") >> TB;
            db().lookupObject<IOdictionary>("nondimensionalProperties").lookup("d1") >> d1;
            const volScalarField& p0 = db().lookupObject<volScalarField>("press0");
            scalar relax = patch().boundaryMesh().mesh().fieldRelaxationFactor("T0");
            scalar k = kn*sqrt(constant::mathematical::pi)/2;
            scalar p0_ = getRefCellValue(p0, 0);
            (*this)== relax * TB/(1 + d1*k/p0_*snGrad()) + (1-relax)*(*this);
        #};
        codeInclude
        #{
            #include "fvCFD.H"
        #};

        codeOptions
        #{
            -I$(LIB_SRC)/finiteVolume/lnInclude
        #};
    }
    leftAndRight
    {
        type empty;
    }
    frontAndBack
    {
        type empty;
    }
}


// ************************************************************************* //
