/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    //default         Gauss linear;
    div(((rho*U)&devRhoReff))           Gauss linear;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
    // limitedLinear -- Koren limiter
    // linearUpwind grad(...) -- upwind with correction
    div(rhoPhi,U)   Gauss vanLeerV;
    div(rhoPhi,h)   Gauss vanLeer;
}

laplacianSchemes
{
    default         Gauss linear orthogonal; // orthogonal is used for Cartesian meshes
}

interpolationSchemes
{
    //default         linear;
    flux(U)                     linear;
    interpolate(nHat)           linear;
    interpolate(rho)            linear;
    interpolate(rAU)            linear;
    interpolate(k)              harmonic;
    interpolate(Cp)             linear;
    interpolate(vapourPressure) harmonic;
    interpolate(rho|A)          linear;
    dotInterpolate(S,U_0)       linear;
    interpolate((rho*rAU))      linear;
    flux(HbyA)                  linear;
    interpolate((sigma*interfaceProperties:K)) linear;
    interpolate(HsPrimeAlphaG)  linear;
}

snGradSchemes
{
    default         orthogonal;
}

// ************************************************************************* //
